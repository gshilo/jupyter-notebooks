FROM registry.access.redhat.com/ubi8/s2i-core:latest

ENV PYTHON_VERSION=3.7 \
    PATH=$HOME/.local/bin/:$PATH \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=UTF-8 \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    PIP_NO_CACHE_DIR=off \
    LD_LIBRARY_PATH="/lib:/usr/lib:/usr/local/lib:${LD_LIBRARY_PATH}"

COPY . /tmp/src

    # Installing dependencies for compiling python from source
RUN source /tmp/src/.s2i/bin/generate_container_user && \
    INSTALL_PKGS="nss_wrapper \
                  httpd \
                  httpd-devel \
                  libffi-devel \
                  libtool-ltdl \
                  autoconf \
                  automake \
                  bzip2 \
                  gcc-c++ \
                  libcurl-devel \
                  libpq-devel \
                  libxml2-devel \
                  libxslt-devel \
                  make \
                  openssl-devel \
                  patch \
                  procps-ng \
                  npm \
                  redhat-rpm-config \
                  sqlite-devel \
                  unzip \ 
                  zlib-devel" && \
    yum -y module enable httpd:2.4 && \
    yum -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    # Remove redhat-logos-httpd (httpd dependency) to keep image size smaller.
    rpm -e --nodeps redhat-logos-httpd && \
    yum -y clean all --enablerepo='*' && \
    # Compiling python from source
    cd /opt && \
    curl -o Python-3.7.11.tgz https://www.python.org/ftp/python/3.7.11/Python-3.7.11.tgz && \
    tar xzf Python-3.7.11.tgz && \
    cd Python-3.7.11 && \
    ./configure \
        --enable-optimizations \
        --enable-shared \
        --enable-loadable-sqlite-extensions && \
    make && make altinstall && \
    cd /opt && \
    rm Python-3.7.11.tgz && \
    rm -rf Python-3.7.11 && \
    # - Create a Python virtual environment for use by any application to avoid
    #   potential conflicts with Python packages preinstalled in the main Python
    #   installation.
    # - In order to drop the root user, we have to make some directories world
    #   writable as OpenShift default security model is to run the container
    #   under random UID.
    python3.7 -m venv ${APP_ROOT} && \
    chown -R 1001:0 ${APP_ROOT} && \
    fix-permissions ${APP_ROOT} -P && \
    rpm-file-permissions && \
    # Do custom jupyter s2i build
    rm -rf /tmp/src/.git* && \
    mkdir -p /opt/app-root/etc/ && \
    mkdir -p /opt/app-root/bin/ && \
    chown -R 1001 /tmp/src && \
    chgrp -R 0 /tmp/src && \
    chgrp -R 0 /opt/app-root/ && \
    chmod -R g+w /tmp/src && \
    rm -rf /tmp/scripts && \
    mv /tmp/src/.s2i/bin /tmp/scripts

USER 1001

LABEL io.k8s.description="S2I builder for custom Jupyter notebooks." \
      io.k8s.display-name="Jupyter Notebook" \
      io.openshift.expose-services="8080:http" \
      io.openshift.tags="builder,jupyter" \
      io.openshift.s2i.scripts-url="image:///opt/app-root/builder"

RUN /tmp/scripts/assemble && \
    chmod -R 777 /opt/app-root/src/.local/share/jupyter && \
    chmod -R 777 /opt/app-root/src/.jupyter && \
    mkdir /opt/app-root/src/.pip


CMD [ "/opt/app-root/builder/run" ]